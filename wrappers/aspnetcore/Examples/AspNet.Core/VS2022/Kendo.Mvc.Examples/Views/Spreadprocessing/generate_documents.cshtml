<div id="example">
    <div class="demo-section custom-width">
        @using (Html.BeginForm("GenerateDocument", "SpreadProcessing"))
        {

            @(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.ProductViewModel>()
                .Name("products")
            .Columns(columns =>
            {
                columns.Bound(p => p.ProductName).Title("ITEM").Width(400);
                columns.Bound(p => p.UnitsInStock).Title("QTY").Width(60);
                columns.Bound(p => p.UnitPrice).Title("PRICE").Width(140);
                columns.Bound("").ClientTemplate("#=subTotal(data)#").Title("SUB TOTAL").ClientFooterTemplate("#=footerTemplate()#").Width(180);
            })
            .HtmlAttributes(new { style = "width: 550px;" })
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.ProductID))
            .Read("GenerateDocument_Read", "SpreadProcessing")
            )
            )

            @section scripts {
<script>
                function subTotal(product) {
                    return kendo.format("{0:c}", (product.UnitsInStock * product.UnitPrice));
                }

                function footerTemplate() {
                    var grid = $("#products").data("kendoGrid");
                    var items = grid.dataSource.view();
                    var subTotal = 0;
                    var grandTotal = 0;

                    for (var i = 0; i < items.length; i++) {
                        subTotal = items[i].UnitsInStock * items[i].UnitPrice;
                        grandTotal = grandTotal + subTotal;
                    }

                    return kendo.format("Total: {0:c}", grandTotal);
                }
            </script>
}

            <div class="file-options-wrapper">
                <div class="column">
                    @Html.Label("fileExtension", "Download as: ")

                    @(Html.Kendo().DropDownList()
                        .Name("fileFormat")
                        .SelectedIndex(0)
                        .Items(items =>
                            {
                                items.Add().Text("XLSX").Value("xlsx");
                                items.Add().Text("CSV").Value("csv");
                                items.Add().Text("TXT").Value("txt");
                                items.Add().Text("XLSM").Value("xlsm");
                            }
                        )
                    )

                </div>
            </div>

            <hr class="clear" />

            <input type="submit" class="k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md wide-btn" value="Generate and Download" />
        }
    </div>
</div>

<style>
    #example .demo-section.custom-width {
        max-width: 550px;
    }

    input.wide-btn {
        width: 240px;
        float: right;
    }

    .file-options-wrapper {
        margin: 1.5em 0;
    }

    input.wide-btn {
        width: 240px;
        float: right;
    }

    hr {
        margin: 1em 0;
    }
</style>