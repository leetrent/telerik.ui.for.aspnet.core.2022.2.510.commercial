<div class="configurator">
    <div class="header">Configurator</div>
    <div class="box-col">
        <h4>Validate / Clear Form</h4>
        <ul class="options">
            <li>
                <button id="validate" >Validate</button>
                <button id="clear" >Clear</button>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Vertical / Horizontal Orientation</h4>
        <ul class="options">
            <li>
                <button id="vertical" >Vertical</button>
                <button id="horizontal" >Horizontal</button>
            </li>
        </ul>
    </div>
</div>

<div class="demo-section">
    <div id="validation-success"></div>
    @(Html.Kendo().Form<Kendo.Mvc.Examples.Models.Form.UserViewModel>()
        .Name("exampleForm")
        .HtmlAttributes(new { action = "Api", method = "POST" })
        .Orientation("vertical")
        .Validatable(v =>
        {
            v.ValidateOnBlur(true);
            v.ValidationSummary(vs => vs.Enable(false));
        })
        .Items(items =>
        {
            items.AddGroup()
                .Label("Registration Form")
                .Items(i =>
                {
                    i.Add()
                        .Field(f => f.FirstName)
                        .Label(l => l.Text("First Name:"));
                    i.Add()
                        .Field(f => f.LastName)
                        .Label(l => l.Text("Last Name:"));
                    i.Add()
                        .Field(f => f.UserName)
                        .Label(l => l.Text("Username:"));
                    i.Add()
                        .Field(f => f.Password)
                        .Label(l => l.Text("Password:"))
                        .Hint("Hint: enter alphanumeric characters only.")
                        .EditorTemplateHandler("setPasswordEditor");
                    i.Add()
                        .Field(f => f.Email)
                        .Label(l => l.Text("Email:"));
                    i.Add()
                        .Field(f => f.Agree)
                        .Label(l => l.Text("Agree to Terms:"));
                });
        })
        .Events(ev => ev.ValidateField("onFormValidateField").Submit("onFormSubmit").Clear("onFormClear"))
    )
</div>

@section scripts {
<script>
    $(document).on("kendoReady", function () {
        var form = $("#exampleForm").data("kendoForm");

        $("#validate").click(function () {
            form.validate();
        });

        $("#clear").click(function () {
            form.clear();
        });

        $("#vertical").click(function () {
            form.setOptions({
                orientation: "vertical"
            });

            $("#validation-success").html("");
        });

        $("#horizontal").click(function () {
            form.setOptions({
                orientation: "horizontal"
            });

            $("#validation-success").html("");
        });
    });

    function setPasswordEditor(container, options) {
        $('<input type="password" id="Password" name="' + options.field + '" title="Password" required="required" autocomplete="off" aria-labelledby="Password-form-label" data-bind="value: Password" aria-describedby="Password-form-hint"/>')
            .appendTo(container)
            .kendoTextBox();
    }

    function onFormValidateField(e) {
        $("#validation-success").html("");
    }

    function onFormSubmit(e) {
        e.preventDefault();
        $("#validation-success").html("<div class='k-messagebox k-messagebox-success'>Form data is valid!</div>");
    }

    function onFormClear(e) {
        $("#validation-success").html("");
    }
</script>
}