<div class="configurator">
    <div class="header">Configurator</div>
    <div class="box-col">
        <h4>Get selected action</h4>
        <ul class="options">
            <li>
                <button class="getSelected">Get selected action</button>
            </li>
            <li>
                Selected: <span id="selectedFromGroup"></span>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Show / Hide</h4>
        <ul class="options">
            <li>
                <button class="togglePlayerControlsVisibility">Hide player controls</button>
            </li>
            <li>
                <button class="toggleRepeatVisibility">Hide Repeat</button>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Enable / Disable</h4>
        <ul class="options">
            <li>
                <button class="toggleRepeat">Enable/Disable Repeat</button>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Add</h4>
        <ul class="options">
            <li>
                <button class="addItem">Add new button</button>
            </li>
            <li>
                <button class="addSplitButton">Add new SplitButton</button>
            </li>
            <li>
                <button class="addButtonGroup">Add new ButtonGroup</button>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Remove</h4>
        <ul class="options">
            <li>
                <button class="removeItem">Remove by ID</button>
                <input type="text" value="#delete" id="forRemoval" style="width:130px" />
            </li>
        </ul>
    </div>
</div>

@(Html.Kendo().ToolBar()
            .Name("ToolBar")
            .Items(items =>
            {
                items.Add().Type(CommandType.ButtonGroup).Id("playerControls").Buttons(buttons =>
                {
                    buttons.Add().Text("play").Id("play").Togglable(true).Group("player");
                    buttons.Add().Text("pause").Id("pause").Togglable(true).Group("player").Selected(true);
                    buttons.Add().Text("stop").Id("stop").Togglable(true).Group("player");
                });
                items.Add().Type(CommandType.Button).Id("repeat").Text("repeat").Togglable(true);
                items.Add().Type(CommandType.SplitButton).Text("Save").Id("save").MenuButtons(menuButtons =>
                {
                    menuButtons.Add().Text("Add to favourites").Id("favourites");
                    menuButtons.Add().Text("Listen later").Id("later");
                    menuButtons.Add().Text("Download").Id("download");
                });
                items.Add().Type(CommandType.Button).Id("delete").Text("Delete");
            })
)

@section scripts {
    <script>
        $(document).on("kendoReady", function () {

            $(".getSelected").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar"),
                    selected;

                selected = toolbar.getSelectedFromGroup("player");
                $("#selectedFromGroup").text(selected.text());
            });

            $(".togglePlayerControlsVisibility").click(function (e) {
                var toolbar = $("#ToolBar").data("kendoToolBar"),
                    buttonGroup = $("#playerControls"),
                    isVisible = buttonGroup.is(":visible");

                if (isVisible) {
                    toolbar.hide(buttonGroup);
                    $(e.target).text("Show player controls");
                } else {
                    toolbar.show(buttonGroup);
                    $(e.target).text("Hide player controls");
                }
            });

            $(".toggleRepeat").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar"),
                    repeatButton = $("#repeat"),
                    isDisabled = repeatButton.hasClass("k-state-disabled");

                toolbar.enable(repeatButton, isDisabled);
            });

            $(".toggleRepeatVisibility").click(function (e) {
                var toolbar = $("#ToolBar").data("kendoToolBar"),
                    repeatButton = $("#repeat"),
                    isVisible = repeatButton.is(":visible");

                if (isVisible) {
                    toolbar.hide(repeatButton);
                    $(e.target).text("Show Repeat");
                } else {
                    toolbar.show(repeatButton);
                    $(e.target).text("Hide Repeat");
                }
            });

            $(".removeItem").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar"),
                    id = $("#forRemoval").val();

                toolbar.remove(id);
            });

            $(".addItem").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar");
                toolbar.add({ type: "button", text: "New Button", id: "newButton", togglable: true });
            });

            $(".addSplitButton").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar");

                toolbar.add({
                    type: "splitButton",
                    text: "New SplitButton",
                    menuButtons: [
                        { text: "Option 1" },
                        { text: "Option 2" }
                    ]
                });
            });

            $(".addButtonGroup").click(function () {
                var toolbar = $("#ToolBar").data("kendoToolBar");

                toolbar.add({
                    type: "buttonGroup",
                    buttons: [
                        { text: "Left" },
                        { text: "Middle" },
                        { text: "Right" }
                    ]
                });
            });
        });
    </script>
}