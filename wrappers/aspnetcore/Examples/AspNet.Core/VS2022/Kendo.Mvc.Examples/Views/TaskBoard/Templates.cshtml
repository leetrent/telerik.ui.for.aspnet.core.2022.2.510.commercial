@using Kendo.Mvc.Examples.Models.TaskBoard

<div class="demo-section wide">

    <script id="column-template" type="text/x-kendo-template">
        <div class="column-template-container">
            <div>
                <img src="@Url.Content("~/shared/web/Employees/" + "#= Image #")" style="height:50px; width: 50px;">
            </div>
            <div>
                <h3>#: Text #</h3>
            </div>
        </div>
    </script>

    <script id="card-template" type="text/x-kendo-template">
        <div class="template-container">
            <div class="template-header">
                <p><a class="k-card-title k-link" href="" data-command="SelectCardCommand">#: Title #</a></p>
            </div>
            <p>#: Description#</p>
            <p>#: kendo.toString( Start, "MMMM dd")#</p>
        </div>
    </script>

    <script id="previewPane-header-template" type="text/x-kendo-template">
        <div class="k-taskboard-pane-header">
            <h3 class="k-taskboard-pane-header-text">#: Title #</h3>
            <span class="k-spacer"></span>
            <div class="k-taskboard-pane-header-actions">
                <button class="k-button k-button-flat-base k-button-flat k-button-md k-rounded-md" title="Close" data-command="ClosePaneCommand">
                    <span class="k-button-icon k-icon k-i-close"></span>
                </button>
            </div>
        </div>
    </script>

    <script id="previewPane-content-template" type="text/x-kendo-template">
        <div class="k-taskboard-pane-content">
            <p>#: Description #</p>
            <p>#: kendo.toString(Start, "MMMM dd, h:mm tt")# - #:kendo.toString(End, "MMMM dd, h:mm tt")#</p>
        </div>
        <div class="k-taskboard-pane-actions k-action-buttons k-actions-end">
            <button class="k-button k-button-solid-base k-button-solid k-button-md k-rounded-md" title="Delete" data-command="DeleteCardCommand" data-options="null">
                <span class="k-button-icon k-icon k-i-delete"></span>Delete
            </button>
            <button class="k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md" title="Edit" data-command="EditCardCommand" data-options="null">
                <span class="k-button-icon k-icon k-i-edit "></span>Edit
            </button>
        </div>
    </script>

    <script id="tooltip-template" type="text/x-kendo-template">
        <div class="tooltip-template-container">
            # var card = target.closest(".k-taskboard-card"); #

            # var taskBoard = $("\\#taskBoard").data("kendoTaskBoard") #
            # var item = taskBoard.dataItem(card);  #
            <p>#: item.Title#</p>
            <p>#: item.Description#</p>
            <p>#: kendo.toString( item.Start, "MMMM dd, h:mm tt")# - #:kendo.toString( item.End, "MMMM dd, h:mm tt")#</p>
        </div>
    </script>

    @(Html.Kendo().TaskBoard<Kendo.Mvc.Examples.Models.Scheduler.TaskViewModel, Kendo.Mvc.Examples.Models.TaskBoard.Column>()
        .Name("taskBoard")
        .ColumnSettings(s =>
        {
            s.TemplateId("column-template");
            s.DataTextField("Text");
            s.DataStatusField("ID");
        })
        .Columns(dataSource => dataSource.Ajax().Read("Templates_Columns_Read", "TaskBoard"))
        .DataTitleField("Title")
        .DataStatusField("OwnerID")
        .DataDescriptionField("Description")
        .TemplateId("card-template")
        .PreviewPane(p =>
        {
            p.TemplateId("previewPane-content-template");
            p.HeaderTemplateId("previewPane-header-template");
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.TaskID))
            .Read(read => read.Action("Tasks_Read", "TaskBoard"))
            .Create(update => update.Action("Tasks_Create", "TaskBoard"))
            .Update(update => update.Action("Tasks_Update", "TaskBoard"))
            .Destroy(update => update.Action("Tasks_Destroy", "TaskBoard"))
        )
        .Editable(false)
        .Height("500")
        .Events(ev =>
        {
            ev.Change("onChange");
        })
    )

    @(Html.Kendo().Tooltip()
        .For("#taskBoard")
        .Filter(".k-taskboard-card")
        .ContentTemplateId("tooltip-template")
        .Position(TooltipPosition.Right)
    )

</div>

@section scripts {
    <script type="text/javascript">
        function onChange(ev) {
            var taskBoard = ev.sender;
            var dataSource = taskBoard.dataSource;
            var newIndex = ev.newIndex;
            var currentCard = ev.card;
            var nextCardElm = taskBoard.itemsByColumn(ev.columnElement).eq(newIndex + 1);
            var nextCard = nextCardElm.length ? taskBoard.dataItem(nextCardElm) : null;
            var newDataIndex = dataSource.indexOf(nextCard);

            if (newDataIndex < 0) {
                newDataIndex = dataSource.view().length;
            }
            if (ev.action === "receive" || ev.action === "sort") {
                dataSource.pushDestroy(currentCard);
                dataSource.pushInsert(newDataIndex, currentCard);
            }
        }
    </script>
}

<style>
    .demo-section.wide {
        max-width: 1025px;
    }

    .template-container {
        padding-top: 10px;
        padding-left: 12px;
    }

        .template-container img {
            margin-top: 10px;
            margin-bottom: 10px;
            margin-left: -10px;
        }

    .template-header {
        width: 100%;
        display: flex;
        justify-content: space-between;
    }

    .column-status {
        padding-top: 5px;
    }

    .column-text {
        padding-left: 10px;
    }

    .column-template-container {
        width: 100%;
        display: flex;
        margin-left: 5px;
    }

    .column-template-container h3 {
        padding-left: 10px;
    }

    .template-title {
        color: red;
        word-wrap: break-word;
    }

    .k-taskboard-drag-hint {
        font: 400 14px Arial,Helvetica,sans-serif;
    }
</style>
