<form action="@Url.Action("ExportServer", "Grid")" method="POST" id="form">
    <input type="submit" class="k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md download" data-format="xlsx" data-title="ExcelExport" value="Export to XLSX" />&nbsp;&nbsp;
    <input type="submit" class="k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md download" data-format="csv" data-title="CSVExport" value="Export to CSV" />
</form>

<br />

@(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.OrderViewModel>()
    .Name("grid")
    .Columns(columns => {
        columns.Select().Width(80);
        columns.Bound(p => p.OrderID).Filterable(false);
        columns.Bound(p => p.Freight);
        columns.Bound(p => p.ShipName);
        columns.Bound(p => p.ShipCity);
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .PersistSelection(true)
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Read(read => read.Action("Orders_Read", "Grid"))
        .Model(m=> m.Id(i=> i.OrderID))
     )
)

@section scripts {
    <script>
        function addOptionsToForm(options, form, parents) {
            for (var option in options) {
                if (!options[option]) {
                    continue;
                }

                if (typeof options[option] === 'object') {
                    parents.push(option)
                    addOptionsToForm(options[option], form, parents);
                    parents.pop();
                } else {
                    form.append('<input type="hidden" name="' + inputName(option, parents) + '" value="' + options[option] + '" />');
                }
            }
        }

        function inputName(option, parents) {
            var result = "";

            if (!parents.length) {
                return option;
            }

            for (var i = 0; i < parents.length; i++) {
                if (i === 0) {
                    result += parents[i];
                    continue;
                }
                result += "[" + parents[i] + "]";
            }

            result += "[" + option + "]";

            return result;
        }

        function columnsFilterHandler(col) {
            return col.field;
        }

        function columnsMapHandler(col) {
            return {
                title: col.title,
                width: col.width,
                field: col.field,
                format: col.format,
                hidden: col.hidden
            }
        }
        $(document).on("kendoReady", function () {
            $(".download").click(function () {
                var grid = $("#grid").data("kendoGrid");
                var options = {
                    format: $(this).data("format"),
                    title: $(this).data("title"),
                    columnSettings: grid.columns.filter(columnsFilterHandler).map(columnsMapHandler),
                    selectedIds: grid.selectedKeyNames()
                }
                $('#form input[type="hidden"]').remove();
                addOptionsToForm(options, $('#form'), []);
            });
        });
    </script>
}

<style>
    form {
        display: flex;
    }
</style>