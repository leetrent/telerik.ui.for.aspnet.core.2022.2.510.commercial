@addTagHelper *, Kendo.Mvc

<kendo-grid name="Grid" navigatable="true" on-sort="onSort">
    <datasource type="DataSourceTagHelperType.Ajax" page-size="20"
        server-operation="false"
        batch="true"
        on-error="error_handler">
        <schema data="Data" total="Total">
            <model id="ProductID">
                <fields>
                    <field name="ProductID" type="number" editable="false"></field>
                    <field name="ProductName" type="string"></field>
                    <field name="UnitPrice" type="number"></field>
                    <field name="UnitsInStock" type="number"></field>
                    <field name="Category" default-value='new Kendo.Mvc.Examples.Models.CategoryViewModel() { CategoryID= 8, CategoryName="Seafood" }'></field>
                    <field name="UnitsOnOrder" type="number"></field>
                    <field name="Discontinued" type="boolean"></field>
                </fields>
            </model>
        </schema>
        <transport>
            <read url="/grid/products_read"/>
            <update url="/grid/products_update"/>
            <create url="/grid/products_create"/>
            <destroy url="/grid/products_destroy"/>
        </transport>
    </datasource>
    <columns>
        <column field="ProductName" width="320" title="Product Name" template="#=productNameTemplate(data)#"/>
        <column field="UnitPrice" title="Unit Price" width="150"/>
        <column field="UnitsInStock" title="Units In Stock" width="150" min-screen-width="800"/>
        <column field="Category.CategoryName" title="Category Name" width="180" editor="ClientCategoryEditor" template="#=templateCell(data)#"/>
        <column field="UnitsOnOrder" title="Units On Order" width="150" min-screen-width="800"/>
        <column field="Discontinued" width="130"/>
        <column width="160">
            <commands>
                <column-command text="Delete" name="destroy"></column-command>
            </commands>
        </column>
    </columns>
    <toolbar>
        <toolbar-button name="create"></toolbar-button> 
        <toolbar-button name="save"></toolbar-button>
    </toolbar>
    <editable mode="incell"/>
    <pageable enabled="true"/>
    <sortable enabled="true"/>
    <groupable enabled="true"/>
    <filterable enabled="true"/>
    <scrollable enabled="true"/>
</kendo-grid>

@section scripts {
    <script type="text/javascript">
        function productNameTemplate(data) {
            return `<div class='product-photo'
                    style= 'background-image: url(/shared/web/foods/${data.ProductID}.jpg);'></div>
                    <div class='product-name'>${data.ProductName}</div>`
        }

        function ClientCategoryEditor(container, options) {
            $('<input required name="Category">')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: false,
                    dataTextField: "CategoryName",
                    dataValueField: "CategoryID",
                    dataSource: {
                        type: "odata",
                        transport: {
                            read: "https://demos.telerik.com/kendo-ui/service/Northwind.svc/Categories"
                        }
                    }
                });
        }

        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function() {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }

        function templateCell(data) {
            var template = "";
            if (data.dirtyFields.Category) {
                template += "<span class='k-dirty'></span>"
            }
            template += data.Category.CategoryName;
            return template;
        }

        // Prevent sorting when new record without Product Name is added
        function onSort(e) {
            var gridData = e.sender.dataSource.data()
            gridData.forEach(function (element) {
                if (!element.ProductName) {
                    e.preventDefault()
                }
            });
        }
    </script>
}


<style>
    .product-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .product-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }

    .k-grid-content td {
        position: relative;
    }
</style>