@addTagHelper *, Kendo.Mvc

@{
    var ddl_data = new List<string>() { "1000", "10000", "500000" };
}
<style>
    .k-virtual-scrollable-wrap td {
        white-space: nowrap;
    }
</style>
<div class="configurator">
    <div class="header">Configurator</div>
    <div class="box-col">
        <h4>Select Number of rows: </h4>
        <kendo-dropdownlist name="count"
            value="1000"
            template="#= kendo.toString(data, 'n0')# rows"
            value-template="#= kendo.toString(data, 'n0')# rows"
            on-change="updateRowsCount"
            bind-to="ddl_data">
        </kendo-dropdownlist>
    </div>
    <div class="box-col">
        <h4>Grid data total:</h4>
        <div id="message"></div>
    </div>
</div>

<kendo-grid name="grid" height="543" on-data-bound="renderTimeSpan">
    <datasource type="DataSourceTagHelperType.Ajax" page-size="100" on-change="resetTimer">
        <transport>
	        <read url="/grid/virtualization_read" data="getRowCount"/>
        </transport>
    </datasource>
    <columns>
        <column field="EmployeeID" width="110" title="#"/>
        <column field="FirstName"/>
        <column field="LastName"/>
        <column field="City" title="Responsible For"/>
        <column field="Country" title="Based In"/>
        <column field="Title"/>
    </columns>
    <sortable enabled="true"/>
    <filterable enabled="true" extra="false"/>
    <pageable enabled="true" info="true" numeric="false" previous-next="false">
        <messages display="Showing {2} data items"/>
    </pageable>
    <scrollable enabled="true" virtual="true"/>
</kendo-grid>

@section scripts {
<script> 
    var initStart;
    var initEnd;
    var rowCount;

    function renderTimeSpan() {
        initEnd = new Date();
        $("#message")
            .text(kendo.format("UI for ASP.NET Core Grid bound to {0} items in {1} milliseconds", rowCount, initEnd - initStart));
    }

    function resetTimer() {
        initStart = new Date();
    }

    function getRowCount() {
        var dropDown = $("#count").data("kendoDropDownList");
        rowCount = dropDown.value();
        return {
            rows: rowCount
        };
    }

    function updateRowsCount() {
        var grid = $("#grid").data("kendoGrid");
        grid.dataSource.read().then(function () {
            $("#grid .k-scrollbar").scrollTop(0);
            grid.refresh();
        });        
    }
</script>
}