<script>
    function onTileResize(e) {
        var colSpan = e.container.css("grid-column-end");
        var rowSpan = e.container.css("grid-row-end");

        var chart = e.container.find(".k-chart").data("kendoChart");
        // hide chart labels when the space is limited
        if (colSpan === "span 1" && chart) {
            var options = {
                axisDefaults: {
                    labels: { visible: false }
                }
            };

            if (rowSpan === "span 1") {
                options.legend = { visible: false };
            }

            chart.setOptions(options);
        }

        if (colSpan !== "span 1" && chart) {
            var options = {};
            if (colSpan === "span 2" && rowSpan === "span 1") {
                options.axisDefaults = { visible: false };
                options.legend = { visible: false };
            }

            if (rowSpan !== "span 1") {
                options.legend = { visible: true };
                options.axisDefaults = { visible: true };
            }
            chart.setOptions(options);
        }

        // for widgets that do not auto resize
        // https://docs.telerik.com/kendo-ui/styles-and-layout/using-kendo-in-responsive-web-pages
        kendo.resize(e.container, true);
    }

    $(window).on("resize", function () {
        kendo.resize($(".k-card-body"));
    });

    $(document).on("kendoReady", function () {
        kendo.resize($(".k-grid, .k-chart, .k-gauge"));
        $(document).bind("kendo:skinChange", updateTheme);
    });

    function updateTheme() {
        var charts = $(".k-chart");
        $.each(charts, function (i, elem) {
            var theme = kendoTheme;
            if (/(default-|bootstrap-|material-|classic-)/.test(kendoTheme)) {
                theme = "sass";
            }
            $(elem).getKendoChart().setOptions({ theme: theme });
        });
    }
</script>

<script id="photo-template" type="text/x-kendo-template">
    <div class='employee-photo'
         style='background-image: url(@Url.Content("~/shared/web/treelist/people/#: EmployeeId #.jpg"));'></div>
    <div class='employee-name'>#: FirstName #</div>
</script>
<!-- container templates -->
<script id="treelist-template" type="text/x-kendo-template">
    @(Html.Kendo().TreeList<Kendo.Mvc.Examples.Models.TreeList.EmployeeDirectoryModel>()
        .Name("treelist")
        .Columns(columns =>
        {
            columns.Add().Field(e => e.FirstName).Width(230).TemplateId("photo-template");
            columns.Add().Field(e => e.LastName).Width(130);
            columns.Add().Field(e => e.Position).Width(180);
        })
        .Filterable()
        .Sortable()
        .DataSource(dataSource => dataSource
            .Read(read => read.Action("All", "EmployeeDirectory"))
            .ServerOperation(false)
            .Model(m => {
                m.Id(f => f.EmployeeId);
                m.ParentId(f => f.ReportsTo);
                m.Expanded(true);
            })
        )
        .HtmlAttributes(new { style = "height:100%;"})
        .ToClientTemplate()
    )
</script>
<script id="chart-template" type="text/x-kendo-template">
    @(Html.Kendo().Chart()
        .Name("chart")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .Series(series =>
        {
            series
                .Column(new double[] { 16.4, 21.7, 35.4, 19, 10.9, 13.6, 10.9, 10.9, 10.9, 16.4, 16.4, 13.6, 13.6, 29.9, 27.1, 16.4, 13.6, 10.9, 16.4, 10.9, 24.5, 10.9, 8.1, 19, 21.7, 27.1, 24.5, 16.4, 27.1, 29.9 })
                .Name("Planned");
            series
                .Column(new double[] { 15.4, 20, 35.4, 13, 12, 16, 13.2, 7.4, 20, 18.2, 20, 17.8, 20.3, 10, 30, 29.3, 20, 13.7, 25.2, 16.5, 10, 17.1, 10, 14.7, 20, 14.8, 10, 12, 20, 13.5 })
                .Name("Completed");
            series
               .Line(new double[] { 6, 10, 10, 10, 10, 9, 5, 5, 10, 8, 8, 5, 8, 11, 9, 15, 20, 23, 24, 21, 21, 20, 22, 22, 20, 18, 16, 15, 20, 13.2 })
               .Name("Company Average");
        })
        .CategoryAxis(axis => axis
            .Categories("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30")
            .MajorGridLines(v => v.Visible(false))
            .Labels(l=>l.Rotation("auto"))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .MajorUnit(20)
            .Min(0)
            .Max(40)
            .Line(l=> l.Width(0))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}")
        )
        .HtmlAttributes(new { style = "height:100%;"})
        .ToClientTemplate()
    )

</script>
<script id="gauge-template" type="text/x-kendo-template">
    <div id="gauge-container" style="height:100%;width:100%;">
        @(Html.Kendo().ArcGauge()
            .Name("gauge")
            .Value(90)
            .Scale(x => x.Min(0).Max(100))
            .CenterTemplate("\\#:value\\#%")
            .ToClientTemplate()
        )
    </div>
</script>

    @(Html.Kendo().TileLayout()
        .Name("tilelayout")
        .Columns(5)
        .RowsHeight("185px")
        .ColumnsWidth("285px")
        .Containers(c => {
            c.Add().Header(h => h.Text("Team Performance")).BodyTemplateId("chart-template").ColSpan(5).RowSpan(2);
            c.Add().Header(h => h.Text("Employee Hierarchy")).BodyTemplateId("treelist-template").ColSpan(3).RowSpan(2);
            c.Add().Header(h => h.Text("Engagement")).BodyTemplateId("gauge-template").ColSpan(2).RowSpan(2);
        })
        .Resizable()
        .Events(e=>e.Resize("onTileResize"))
    )


<style>
    .k-card-image {
        width: 285px;
        height: 189px;
    }

    .k-card-header {
        flex: 0 0 auto;
    }

    .k-card-body {
        overflow: hidden;
    }

    .employee-photo {
        display: inline-block;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-size: 40px 44px;
        background-position: center center;
        vertical-align: middle;
        line-height: 41px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
    }

    .employee-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 41px;
        padding-left: 10px;
    }

    [data-role="arcgauge"],
    [data-role="arcgauge"] [data-role='surface'] {
        /* set the size of gauges to fill their containers. You may want to make the selectors more specific */
        width: 100% !important;
        height: 100% !important;
    }
</style>