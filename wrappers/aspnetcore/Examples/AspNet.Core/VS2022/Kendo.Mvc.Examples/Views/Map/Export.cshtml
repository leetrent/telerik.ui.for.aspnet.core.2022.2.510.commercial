<div class="configurator">
    <div class="header">Export options</div>
    <div class="box-col">
        <button class='export-pdf'>Export as PDF</button>
    </div>
    <div class="box-col">
        <button class='export-img'>Export as Image</button>
    </div>
    <div class="box-col">
        <button class='export-svg'>Export as SVG</button>
    </div>
</div>
@(Html.Kendo().Map()
      .Name("map")
      .Center(30.2681, -97.7448)
      .Zoom(3)
      .Layers(layers =>
       {
           layers.Add()
              .Style(style => style.Fill(fill => fill.Opacity(0.7)))
              .Type(MapLayerType.Shape)
              .DataSource(dataSource => dataSource
                  .GeoJson()
                  .Read(read => read.Url(Url.Content("~/shared/dataviz/map/countries-users.geo.json")))
              );
       })
       .Events(events => events
           .ShapeCreated("onShapeCreated")
           .ShapeMouseEnter("onShapeMouseEnter")
           .ShapeMouseLeave("onShapeMouseLeave")
        )
)

@section scripts{
    <!-- Load Pako ZLIB library to enable PDF compression -->
    <script data-src="@Url.Content("~/shared/pako.min.js")"></script>

    <!-- Chroma.js used to colorize the map in the demo -->
    <script data-src="@Url.Content("~/shared/dataviz/map/js/chroma.min.js")"></script>

    <script>
        var scale;
        $(document).on("kendoReady", function () {
            scale = chroma
                .scale(["white", "green"])
                .domain([1, 1000]);
            $(".export-pdf").click(function () {
                // Convert the DOM element to a drawing using kendo.drawing.drawDOM
                kendo.drawing.drawDOM($("#map"))
                    .then(function (group) {
                        // Render the result as a PDF file
                        return kendo.drawing.exportPDF(group, {
                            paperSize: "auto",
                            margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" }
                        });
                    })
                    .done(function (data) {
                        // Save the PDF file
                        kendo.saveAs({
                            dataURI: data,
                            fileName: "Map.pdf",
                            proxyURL: "@Url.Action("Export_Save", "Map")"
                        });
                    });
            });

            $(".export-img").click(function () {
                // Convert the DOM element to a drawing using kendo.drawing.drawDOM
                kendo.drawing.drawDOM($("#map"))
                    .then(function (group) {
                        // Render the result as a PNG image
                        return kendo.drawing.exportImage(group);
                    })
                    .done(function (data) {
                        // Save the image file
                        kendo.saveAs({
                            dataURI: data,
                            fileName: "Map.png",
                            proxyURL: "@Url.Action("Export_Save", "Map")"
                        });
                    });
            });

            $(".export-svg").click(function () {
                // Convert the DOM element to a drawing using kendo.drawing.drawDOM
                kendo.drawing.drawDOM($("#map"))
                    .then(function (group) {
                        // Render the result as a SVG document
                        return kendo.drawing.exportSVG(group);
                    })
                    .done(function (data) {
                        // Save the SVG document
                        kendo.saveAs({
                            dataURI: data,
                            fileName: "Map.svg",
                            proxyURL: "@Url.Action("Export_Save", "Map")"
                        });
                    });
            });

        });

    function onShapeCreated(e) {
        var shape = e.shape;
        var users = shape.dataItem.properties.users;
        if (users) {
            var color = scale(users).hex();
            shape.options.fill.set("color", color);
        }
    }

    function onShapeMouseEnter(e) {
        e.shape.options.set("fill.opacity", 1);
    }

    function onShapeMouseLeave(e) {
        e.shape.options.set("fill.opacity", 0.7);
    }
    </script>
}