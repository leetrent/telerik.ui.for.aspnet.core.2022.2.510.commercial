<div class="configurator">
    <div class="header">Configurator</div>
    <div class="box-col">
        <h4>Pane index</h4>
        <ul class="options">
            <li>
                <input id="index" type="text" value="0" />
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Resize</h4>
        <ul class="options">
            <li>
                <button id="toggle" >Expand/Collapse</button>
            </li>
            <li>
                <input id="size" type="text" value="100px" /> <button id="setSize" >Set size</button>
            </li>
            <li>
                <input id="min" type="text" value="50px" /> <button id="setMinSize" >Set minimum size</button>
            </li>
            <li>
                <input id="max" type="text" value="150px" /> <button id="setMaxSize" >Set maximum size</button>
            </li>
        </ul>
    </div>
    <div class="box-col">
        <h4>Insert</h4>
        <ul class="options">
            <li>
                <button id="appendPane">Append a pane</button>
            </li>
            <li>
                <button id="removePane">Remove pane</button>
            </li>
            <li>
                <button id="insertBefore">Insert before index</button>
            </li>
            <li>
                <button id="insertAfter">Insert after index</button>
            </li>
        </ul>
    </div>
</div>

@(Html.Kendo().Splitter()
      .Name("splitter")
      .HtmlAttributes(new { style = "height: 300px;" })
      .Panes(panes =>
      {
          panes.Add()
              .HtmlAttributes(new { id = "top_pane" })
              .Size("100px")
              .Collapsible(true)
              .Content(@<p>
                            Left pane
                        </p>);
    
          panes.Add()
              .HtmlAttributes(new { id = "ajax_pane" })
              .LoadContentFrom(Url.Content("~/shared/web/splitter/ajax/ajaxContent1.html"));
    
          panes.Add()
              .HtmlAttributes(new { id = "bottom_pane" })
              .Collapsible(true)
              .Size("20%")
              .Content(@<p>
                            Right pane
                        </p>);
      }))

@section scripts {
<script>
    $(document).on("kendoReady", function () {
        var panes = $("#splitter").children(),
            getPane = function (index) {
                index = Number(index);

                if (!isNaN(index) && index < panes.length) {
                    return panes[index];
                }
            },
            setSize = function (e) {
                if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                    var pane = getPane($("#index").val());

                    if (!pane) return;

                    $("#splitter").data("kendoSplitter").size(pane, $("#size").val());
                }
            },
            setMinSize = function (e) {
                if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                    var pane = getPane($("#index").val());

                    if (!pane) return;

                    $("#splitter").data("kendoSplitter").min(pane, $("#min").val());
                }
            },
            setMaxSize = function (e) {
                if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                    var pane = getPane($("#index").val());

                    if (!pane) return;

                    $("#splitter").data("kendoSplitter").max(pane, $("#max").val());
                }
            },
            appendPane = function (e) {
                $("#splitter").data("kendoSplitter").append().html("appended pane");
            },
            removePane = function (e) {
                $("#splitter").data("kendoSplitter").remove($("#splitter").children(".k-pane").eq($("#index").val()));
            },
            insertBefore = function (e) {
                $("#splitter").data("kendoSplitter").insertBefore({}, $("#splitter").children(".k-pane").eq($("#index").val())).html("inserted before");
            },
            insertAfter = function (e) {
                $("#splitter").data("kendoSplitter").insertAfter({}, $("#splitter").children(".k-pane").eq($("#index").val())).html("inserted after");
            };

        $("#toggle").click(function (e) {
            var pane = getPane($("#index").val());
            if (!pane) return;

            $("#splitter").data("kendoSplitter").toggle(pane, $(pane).width() <= 0);
        });

        $("#setSize").click(setSize);
        $("#size").keypress(setSize);

        $("#setMinSize").click(setMinSize);
        $("#min").keypress(setMinSize);

        $("#setMaxSize").click(setMaxSize);
        $("#max").keypress(setMaxSize);

        $("#appendPane").click(appendPane);
        $("#removePane").click(removePane);

        $("#insertBefore").click(insertBefore);
        $("#insertAfter").click(insertAfter);
    });
</script>
}

<style>
    .configuration .options input
    {
        width: 80px;
    }
</style>
