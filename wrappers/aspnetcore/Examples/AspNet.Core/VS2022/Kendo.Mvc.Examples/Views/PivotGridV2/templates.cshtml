@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;

<div class="responsive-message"></div>

<script id="dataCellTemplate" type="text/x-kendo-tmpl">
    <!-- "Check if there's an available dataItem. If there isn't, display 'N/A'" -->
    # if (!dataItem) { #
         <em>N/A</em>
    <!-- "If there's an available dataItem, its value is more than 100 and its column is CY 2012, render it underlined and in red."  -->
     # } else if(dataItem.value > 100 && data.columnTuple.members[0].caption == "CY 2012") { #
        <u><span style='color: red;'>#: dataItem.fmtValue #</span></u>
    <!-- "If there's an available dataItem and its value is more than 100, render it bolded and in red."  -->
    # } else if(dataItem.value > 100) { #
        <b><span style='color: red;'>#: dataItem.fmtValue #</span></b>
    <!-- "In all other cases display the value bolded and in green."  -->
    # } else { #
         <b><span style='color: green;'>#: dataItem.fmtValue #</span></b>
     # } #
</script>

<script id="headerTemplate" type="text/x-kendo-tmpl">
    # if (!member.children.length) { #
        <em>#: member.caption #</em>
    # } else { #
        #: member.caption #
    # } #
</script>

<div id="example">
    <div id="container">
        @(Html.Kendo().PivotConfiguratorV2()
            .Name("configurator")
            .Sortable()
            .Filterable())

        @(Html.Kendo().PivotGridV2()
            .Name("pivotgrid")
            .ColumnWidth(200)
            .DataCellTemplateId("dataCellTemplate")
            .ColumnHeaderTemplateId("headerTemplate")
            .RowHeaderTemplateId("headerTemplate")
            .Height(580)
            .Configurator("#configurator")
            .DataSource(dataSource => dataSource.
                Xmla()
                .Columns(columns => {
                    columns.Add("[Date].[Calendar]").Expand(true);
                    columns.Add("[Product].[Category]");
                })
                .Rows(rows => rows.Add("[Geography].[City]").Expand(true))
                .Measures(measures => measures.Values(new string[]{"[Measures].[Reseller Freight Cost]"}))
                .Transport(transport => transport
                    .Connection(connection => connection
                        .Catalog("Adventure Works DW 2008R2")
                        .Cube("Adventure Works"))
                    .Read("https://demos.telerik.com/olap/msmdpump.dll")
                )
            )
        )

        @(Html.Kendo().PivotConfiguratorButton()
                .Name("Button")
                .Configurator("configurator")
            )

        @(Html.Kendo().PivotContainer().Name("container").ConfiguratorPosition("left"))
    </div>
</div>
