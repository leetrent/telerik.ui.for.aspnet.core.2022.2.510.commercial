@using Kendo.Mvc.Examples.Models.Gantt;

@(Html.Kendo().Gantt<TaskViewModel, DependencyViewModel>()
    .Name("gantt")
    .Columns(columns =>
    {
        columns.Bound(c => c.TaskID).Title("ID").Width(50);
        columns.Bound(c => c.Title).Editable(true).Sortable(true);
        columns.Bound(c => c.Start).Width(100).Editable(true).Sortable(true);
        columns.Bound(c => c.End).Width(100).Editable(true).Sortable(true);
    })
    .Views(views =>
    {
        views.DayView();
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
    })
    .ColumnMenu(true)
    .Filterable(true)
    .Reorderable(true)
    .Height(700)
    .ShowWorkHours(false)
    .ShowWorkDays(false)
    .Snap(false)
    .Resizable(true)
    .DataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.TaskID);
            m.ParentId(f => f.ParentID);
            m.Field(f => f.Expanded).DefaultValue(true);
        })
        .Read("Columns_ReadTasks", "Gantt")
        .Destroy("Columns_DestroyTask", "Gantt")
        .Update(update => update.Action("Columns_UpdateTask", "Gantt").Data("onUpdateCreate"))
        .Create(create => create.Action("Columns_CreateTask", "Gantt").Data("onUpdateCreate"))
    )
    .DependenciesDataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.DependencyID);
            m.PredecessorId(f => f.PredecessorID);
            m.SuccessorId(f => f.SuccessorID);
        })
        .Read("Columns_ReadDependencies", "Gantt")
        .Create("Columns_CreateDependency", "Gantt")
        .Destroy("Columns_DestroyDependency", "Gantt")
    )
)

@section scripts {
<script>
    // Send the dates for the newly creted/updated tasks as UTC strings
    function onUpdateCreate(e) {
        e.End = e.End.toISOString();
        e.Start = e.Start.toISOString();
    }
</script>
}